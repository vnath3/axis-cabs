---
export interface Props {
  day: number;
  title: string;
  distance_km: number;
  travel_time_hours: number;
  activities: { time_hint: string; name: string; why: string }[];
  food?: string[];
  safety?: string[];
}
const { day, title, distance_km, travel_time_hours, activities, food = [], safety = [] } = Astro.props as Props;
---
<details class="card mb-4 itin" open>
  <summary class="flex items-center justify-between cursor-pointer select-none">
    <div>
      <h3 class="font-semibold text-slate-900">Day {day}: {title}</h3>
      <div class="mt-1 flex flex-wrap gap-2 text-xs text-slate-600">
        <span class="inline-flex items-center gap-1 rounded-full bg-slate-100 px-2 py-1">{distance_km} km</span>
        <span class="inline-flex items-center gap-1 rounded-full bg-slate-100 px-2 py-1">~{travel_time_hours} hrs</span>
      </div>
    </div>
    <svg aria-hidden="true" viewBox="0 0 24 24" class="chev ml-4 h-5 w-5 text-slate-500">
      <path d="M6 9l6 6 6-6" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
    </svg>
  </summary>

  <div class="mt-4">
    <ul class="mt-2 space-y-3">
      {activities.map((a) => (
        <li class="relative pl-6 text-sm">
          <span class="absolute left-0 top-2 h-2 w-2 rounded-full bg-orange-500"></span>
          <p class="font-medium text-slate-900">{a.time_hint} Â· {a.name}</p>
          <p class="text-slate-600">{a.why}</p>
        </li>
      ))}
    </ul>

    {food.length > 0 && (
      <div class="mt-4">
        <p class="text-sm font-semibold text-slate-900">Food ideas</p>
        <div class="flex flex-wrap gap-2 mt-2">
          {food.map((f) => <span class="inline-flex items-center text-xs bg-slate-100 text-slate-700 rounded-full px-2 py-1">{f}</span>)}
        </div>
      </div>
    )}

    {safety.length > 0 && (
      <div class="mt-4">
        <p class="text-sm font-semibold text-slate-900">Safety</p>
        <ul class="list-disc list-inside text-sm text-slate-600">
          {safety.map((s) => <li>{s}</li>)}
        </ul>
      </div>
    )}
  </div>
</details>

<style>
  .itin summary .chev { transition: transform 0.2s ease; transform: rotate(0deg); }
  .itin[open] summary .chev { transform: rotate(180deg); }
</style>
