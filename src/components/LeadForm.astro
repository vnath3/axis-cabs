---
const WA_NUM = (import.meta.env.PUBLIC_WHATSAPP_NUMBER || '+919922333305').replace(/\D/g, '');
import { supabase } from '@/lib/supabaseClient';
---


<form id="lead-form" class="card">
  <!-- ...your inputs stay the same... -->

  <div class="mt-4 flex gap-3">
    <button type="button" class="btn-primary" id="btn-wa">Get Instant Quote on WhatsApp</button>
    <button type="button" class="inline-flex items-center px-5 py-3 rounded-xl border border-primary font-semibold" id="btn-submit">Submit</button>
  </div>
  <p id="msg" class="mt-3 text-sm"></p>

  <script type="module">
    import { supabase } from '/src/lib/supabaseClient.ts';

    const formEl = document.getElementById('lead-form');
    const btnWa = formEl.querySelector('#btn-wa');
    const btnSubmit = formEl.querySelector('#btn-submit');
    const msg = formEl.querySelector('#msg');
    const waNum = "{{WA_NUM}}";

    async function insertLead() {
      const fd = new FormData(formEl);
      const payload = Object.fromEntries(fd.entries());

      // Minimal client validation
      const req = ['from_city','to_city','date','time','pax','name','whatsapp'];
      for (const k of req) if (!payload[k]) throw new Error(`Missing ${k}`);

      const { error } = await supabase.from('leads').insert({
        source: 'web',
        from_city: payload.from_city,
        to_city: payload.to_city,
        date: payload.date,
        time: payload.time,
        pax: String(payload.pax),
        bags: String(payload.bags || '0'),
        name: payload.name,
        whatsapp: payload.whatsapp,
        notes: payload.notes || '',
        utm_source: payload.utm_source || '',
        utm_campaign: payload.utm_campaign || ''
      });

      if (error) throw error;
      return payload;
    }

    btnWa.addEventListener('click', async () => {
      msg.textContent = '';
      if (!formEl.reportValidity()) return;
      try {
        const lead = await insertLead();
        const t =
          `Ride request:%0AFrom: ${encodeURIComponent(lead.from_city)}` +
          `%0ATo: ${encodeURIComponent(lead.to_city)}` +
          `%0ADate/Time: ${encodeURIComponent(lead.date)} ${encodeURIComponent(lead.time)}` +
          `%0APax/Bags: ${encodeURIComponent(lead.pax)}/${encodeURIComponent(lead.bags || '0')}` +
          `%0ANotes: ${encodeURIComponent(lead.notes || '')}`;
        window.location.href = `https://wa.me/${waNum}?text=${t}`;
      } catch (e) {
        msg.textContent = 'Network error. Try again.';
        console.error(e);
      }
    });

    btnSubmit.addEventListener('click', async () => {
      msg.textContent = '';
      if (!formEl.reportValidity()) return;
      try {
        await insertLead();
        msg.textContent = 'Thanks! Our team will contact you shortly.';
      } catch (e) {
        msg.textContent = 'Network error. Try again.';
        console.error(e);
      }
    });
  </script>
</form>
