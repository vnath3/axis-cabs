---
const WA_NUM = (import.meta.env.PUBLIC_WHATSAPP_NUMBER || '+919922333305').replace(/\D/g, '');
const SUPA_URL = import.meta.env.PUBLIC_SUPABASE_URL || '';
const SUPA_KEY = import.meta.env.PUBLIC_SUPABASE_ANON_KEY || '';
const ENV_OK = Boolean(SUPA_URL && SUPA_KEY);
---

<form id="lead-form" class="card" data-supa-url={SUPA_URL} data-supa-key={SUPA_KEY} data-wa={WA_NUM}>
  <div class="grid md:grid-cols-2 gap-4">
    <input required name="from_city" placeholder="From City" class="border rounded-xl px-4 py-3" />
    <input required name="to_city" placeholder="To City" class="border rounded-xl px-4 py-3" />
    <input required name="date" type="date" class="border rounded-xl px-4 py-3" />
    <input required name="time" type="time" class="border rounded-xl px-4 py-3" />
    <input required name="pax" type="number" min="1" max="12" placeholder="Passengers" class="border rounded-xl px-4 py-3" />
    <input name="bags" type="number" min="0" max="12" placeholder="Bags" class="border rounded-xl px-4 py-3" />
    <input required name="name" placeholder="Your Name" class="border rounded-xl px-4 py-3" />
    <input required name="whatsapp" placeholder="WhatsApp (+91...)" class="border rounded-xl px-4 py-3" />
    <textarea name="notes" placeholder="Notes (optional)" class="md:col-span-2 border rounded-xl px-4 py-3"></textarea>
  </div>

  <div class="mt-4 flex gap-3">
    <button type="button" class="btn-primary" id="btn-wa">Get Instant Quote on WhatsApp</button>
    <button type="button" class="inline-flex items-center px-5 py-3 rounded-xl border border-primary font-semibold" id="btn-submit">Submit</button>
  </div>
  <p id="msg" class="mt-3 text-sm">
    {!ENV_OK && '⚠️ Missing Supabase env vars. Add PUBLIC_SUPABASE_URL and PUBLIC_SUPABASE_ANON_KEY on Netlify, then redeploy.'}
  </p>

  <script type="module" is:inline>
    import { getSupabaseClient } from '@/lib/SupabaseClient';
    const supabase = getSupabaseClient();

    const formEl = document.getElementById('lead-form');
    const btnWa = formEl.querySelector('#btn-wa');
    const btnSubmit = formEl.querySelector('#btn-submit');
    const msg = formEl.querySelector('#msg');

    const SUPA_URL = formEl.dataset.supaUrl || '';
    const SUPA_KEY = formEl.dataset.supaKey || '';
    const WA_NUM   = formEl.dataset.wa || '';

    // If envs missing, disable buttons with a clear console message
    if (!SUPA_URL || !SUPA_KEY) {
      btnWa.disabled = true;
      btnSubmit.disabled = true;
      console.error('Missing PUBLIC_SUPABASE_URL or PUBLIC_SUPABASE_ANON_KEY.');
    }

    const supabase = (SUPA_URL && SUPA_KEY)
      ? createClient(SUPA_URL, SUPA_KEY, { auth: { persistSession: false } })
      : null;

    async function insertLead() {
      const fd = new FormData(formEl);
      const payload = Object.fromEntries(fd.entries());

      const req = ['from_city','to_city','date','time','pax','name','whatsapp'];
      for (const k of req) if (!payload[k]) throw new Error(`Missing ${k}`);

      const { error } = await supabase.from('leads').insert({
        source: 'web',
        from_city: payload.from_city,
        to_city: payload.to_city,
        date: payload.date,
        time: payload.time,
        pax: String(payload.pax),
        bags: String(payload.bags || '0'),
        name: payload.name,
        whatsapp: payload.whatsapp,
        notes: payload.notes || '',
        utm_source: payload.utm_source || '',
        utm_campaign: payload.utm_campaign || ''
      });
      if (error) throw error;
      return payload;
    }

    btnWa.addEventListener('click', async () => {
      msg.textContent = '';
      if (!supabase || !formEl.reportValidity()) return;
      try {
        const lead = await insertLead();
        const t =
          `Ride request:%0AFrom: ${encodeURIComponent(lead.from_city)}` +
          `%0ATo: ${encodeURIComponent(lead.to_city)}` +
          `%0ADate/Time: ${encodeURIComponent(lead.date)} ${encodeURIComponent(lead.time)}` +
          `%0APax/Bags: ${encodeURIComponent(lead.pax)}/${encodeURIComponent(lead.bags || '0')}` +
          `%0ANotes: ${encodeURIComponent(lead.notes || '')}`;
        window.location.href = `https://wa.me/${WA_NUM}?text=${t}`;
      } catch (e) {
        console.error(e);
        msg.textContent = 'Network error. Try again.';
      }
    });

    btnSubmit.addEventListener('click', async () => {
      msg.textContent = '';
      if (!supabase || !formEl.reportValidity()) return;
      try {
        await insertLead();
        msg.textContent = 'Thanks! Our team will contact you shortly.';
      } catch (e) {
        console.error(e);
        msg.textContent = 'Network error. Try again.';
      }
    });
  </script>
</form>
