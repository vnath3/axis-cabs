---
/**
 * Robust GA4 loader for Astro
 * - Loads gtag.js
 * - Defines window.gtag and sends config
 * - Flushes queued events (from ga.ts)
 *
 * Add <Analytics /> inside <head> on every page.
 */
const GA4_ID = import.meta.env.PUBLIC_GA4_ID || '';
const isDebug = new URL(Astro.request.url).searchParams.get('debug') === '1';
---
{GA4_ID && (
  <>
    <!-- GA4 base library -->
    <script async src={`https://www.googletagmanager.com/gtag/js?id=${GA4_ID}`}></script>

    <!-- Single hoisted module to define gtag + config + flush -->
    <script hoist>
      import { flushGaQueue } from '@/lib/ga';

      // Inject env values as real JS literals
      const GA_ID = {JSON.stringify(GA4_ID)};
      const DEBUG = {isDebug};

      // Define dataLayer and gtag BEFORE the GA library runs
      window.dataLayer = window.dataLayer || [];
      function gtag(){ window.dataLayer.push(arguments); }
      window.gtag = gtag;

      // Init + config
      gtag('js', new Date());
      gtag('config', GA_ID, { send_page_view: true, debug_mode: DEBUG });

      // Flush any queued custom events
      const tryFlush = () => { try { flushGaQueue(); } catch {} };
      window.addEventListener('load', tryFlush);
      setTimeout(tryFlush, 400);
      setTimeout(tryFlush, 1200);

      // Helpful console breadcrumb while debugging
      console.log('[GA] configured', { GA_ID, DEBUG });
    </script>
  </>
)}
