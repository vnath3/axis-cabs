---
export const prerender = false;
import '../../styles/globals.css';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import Hero from '@/components/Hero.astro';
import { gems } from '@/data/gems';
import LeadForm from '@/components/LeadForm.astro';
import Analytics from '@/components/Analytics.astro';

export async function getStaticPaths() {
  return gems.map((g) => ({ params: { slug: g.slug } }));
}

const { slug } = Astro.params;
const entry = gems.find((g) => g.slug === slug);
if (!entry) return Astro.redirect('/');

/**
 * Normalize entry.content so every card has a heading.
 * - If content[i] is a string, auto-title:
 *   - index 0 => "Highlights"
 *   - index >=1 => "Tips"
 * - If content[i] is { title, text }, keep as-is.
 */
function normalizeContent(content = []) {
  return content.map((item, idx) => {
    if (typeof item === 'string') {
      return {
        title: idx === 0 ? 'Highlights' : 'Tips',
        text: item,
      };
    }
    // ensure keys exist if object provided
    return {
      title: item?.title ?? (idx === 0 ? 'Highlights' : 'Tips'),
      text: item?.text ?? '',
    };
  });
}

const blocks = normalizeContent(entry.content || []);
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{entry.title}</title>
    <meta name="description" content={entry.summary} />
    <link rel="icon" href="/favicon.svg" />
    <Analytics />
  </head>
  <body>
    <Header />
    <Hero title={entry.title} sub={entry.summary} />

    <!-- Stack on small/medium; at lg use fixed 380px sidebar to prevent squeeze -->
    <main class="mx-auto max-w-6xl px-4 grid gap-8 items-start lg:grid-cols-[minmax(0,1fr)_380px]">
      <div class="space-y-4">
        {entry.bestTime && (
          <div class="card">
            <strong class="block text-slate-900">Best Time</strong>
            <p class="text-sm mt-2">{entry.bestTime}</p>
          </div>
        )}

        {entry.howToReach && (
          <div class="card">
            <strong class="block text-slate-900">How to Reach</strong>
            <p class="text-sm mt-2">{entry.howToReach}</p>
          </div>
        )}

        {/* Normalized middle cards always have a heading now */}
        {blocks.map((b) => (
          <div class="card">
            <strong class="block text-slate-900">{b.title}</strong>
            <p class="text-sm mt-2 opacity-90">{b.text}</p>
          </div>
        ))}

        <div class="card">
          <strong class="block text-slate-900">Plan with Axis</strong>
          <p class="text-sm mt-2">Bundle this with nearby routes for better pricing.</p>
        </div>
      </div>

      <aside>
        <div class="card p-4 md:p-6 sticky top-24">
          <h3 class="font-semibold mb-3">Get a Cab</h3>
          <LeadForm />
        </div>
      </aside>
    </main>

    <Footer />
  </body>
</html>
